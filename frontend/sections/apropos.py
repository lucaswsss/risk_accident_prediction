import streamlit as st

def lancer_a_propos():
    st.title("‚ÑπÔ∏è √Ä propos de l'application")
    st.markdown("---")

    st.subheader("üöó Contexte du projet")
    st.write("""
    Cette application a √©t√© d√©velopp√©e dans le cadre du **Kaggle Playground Series - Season 5, Episode 10 (Octobre 2025)**.  
    Le d√©fi visait √† **pr√©dire le risque d‚Äôaccident routier** √† partir de caract√©ristiques de la route, de la m√©t√©o, 
    de l‚Äô√©clairage et d‚Äôautres facteurs li√©s √† la s√©curit√© routi√®re.

    Ce projet s‚Äôinscrit dans la continuit√© des s√©ries Kaggle Playground, 
    qui permettent de pratiquer le **machine learning sur des cas concrets** et accessibles.  
    Il s‚Äôagissait √©galement de la seconde partie d‚Äôun challenge en deux temps, 
    en collaboration avec **Stack Overflow**, invitant les participants √† d√©velopper une **application web interactive**.
    """)

    st.markdown("---")

    st.subheader("üéØ Objectif du projet")
    st.write("""
    L‚Äôobjectif principal de cette application est de **mod√©liser et visualiser le risque d‚Äôaccident routier** 
    √† travers une interface interactive, permettant :
    - L‚Äô**exploration visuelle** des variables et de leurs relations avec le risque d‚Äôaccident,  
    - La **pr√©diction personnalis√©e** du risque selon des param√®tres choisis,  
    - Et un **mini-jeu interactif** pour tester son intuition face au mod√®le.

    L‚Äôensemble vise √† rendre le **machine learning plus p√©dagogique et ludique**.
    """)

    st.markdown("---")

    st.subheader("üß∞ Outils et technologies utilis√©s")
    st.markdown("Voici la stack technique utilis√©e pour le projet :")

    col1, col2, col3, col4, col5 = st.columns(5)
    with col1:
        st.image("https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg", width=60)
        st.caption("Python")
    with col2:
        st.image("https://streamlit.io/images/brand/streamlit-mark-color.png", width=80)
        st.caption("Streamlit")
    with col3:
        st.image("https://cdn.jsdelivr.net/gh/devicons/devicon/icons/pandas/pandas-original.svg", width=60)
        st.caption("Pandas")
    with col4:
        st.image("https://cdn.jsdelivr.net/gh/devicons/devicon/icons/numpy/numpy-original.svg", width=60)
        st.caption("NumPy")
    with col5:
        st.image("https://upload.wikimedia.org/wikipedia/commons/0/05/Scikit_learn_logo_small.svg", width=60)
        st.caption("Scikit-learn")

    col6, col7, col8, col9, col10 = st.columns(5)
    with col6:
        st.image("https://cdn.jsdelivr.net/gh/devicons/devicon/icons/github/github-original.svg", width=60)
        st.caption("GitHub")
    with col7:
        st.image("https://upload.wikimedia.org/wikipedia/commons/3/3c/Flask_logo.svg", width=130)
        st.caption("Flask")
    with col8:
        st.image("https://raw.githubusercontent.com/lucaswsss/risk_accident_prediction/main/frontend/assets/render.svg", width=150)
        st.caption("Render")
    with col9:
        st.image("https://seaborn.pydata.org/_images/logo-mark-lightbg.svg", width=60)
        st.caption("Seaborn")
    with col10:
        st.image("https://upload.wikimedia.org/wikipedia/commons/8/84/Matplotlib_icon.svg", width=60)
        st.caption("Matplotlib")
    st.markdown("---")

    st.subheader("‚òÅÔ∏è D√©ploiement et architecture")
    col1, col2 = st.columns(2)
    with col1:
        st.markdown("""
        #### üß† Backend ‚Äî Mod√®le et API
        - D√©velopp√©e avec **Flask** et **DuckDB**  
        - H√©berg√©e sur **Render**
        - Con√ßue pour √™tre l√©g√®re, rapide et facilement int√©grable
        - Le mod√®le est charg√© via **Joblib** et retourne la probabilit√© d‚Äôaccident  

        """)
    with col2:
        st.markdown("""
        #### üíª Frontend ‚Äî Interface Streamlit
        - Interface intuitive et r√©active  
        - Communication avec l‚ÄôAPI via la biblioth√®que **Requests**  
        - Pages d√©di√©es : *Accueil*, *Exploration*, *Pr√©diction* et *Jeu interactif*  
        - Visualisations dynamiques 
        """)

    st.markdown("L‚Äôapplication Streamlit interagit en temps r√©el avec l‚ÄôAPI FastAPI h√©berg√©e sur Render pour afficher les pr√©dictions.")

    st.markdown("---")

    st.subheader("üë®‚Äçüíª Auteur du projet")

    col1, col2 = st.columns([0.2, 0.8])
    with col1:
        st.image("https://cdn-icons-png.flaticon.com/512/174/174857.png", width=60)  # Logo LinkedIn
    with col2:
        st.markdown("""
        **Lucas Labb√©**  
        üìÖ Cr√©ation : *Octobre 2025*  
        üîó [Mon profil LinkedIn](https://www.linkedin.com/in/lucas-labb%C3%A9-0b8370174/)  
        """)

    st.markdown("""
    ---
    ‚ú® *Merci d‚Äôavoir explor√© cette application !*  
    D√©couvrez les diff√©rentes fonctionnalit√©s depuis le menu lat√©ral :  
    **Exploration**, **Pr√©diction**, et **Jeu interactif**.
    """)


    st.caption("¬© Lucas Labb√© ‚Äî Application d√©velopp√©e avec Streamlit | Octobre 2025")
